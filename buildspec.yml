version: 0.2
env:
  secrets-manager:
    LIQUIBASE_DEV_URL: LIQUIBASE_DEV:host
    LIQUIBASE_DEV_USERNAME: LIQUIBASE_DEV:username
    LIQUIBASE_DEV_PASSWORD: LIQUIBASE_DEV:password
    LIQUIBASE_TESTING_URL: LIQUIBASE_TESTING:host
    LIQUIBASE_TESTING_USERNAME: LIQUIBASE_TESTING:username
    LIQUIBASE_TESTING_PASSWORD: LIQUIBASE_TESTING:password
phases:
  install:
    runtime-versions:
      java: corretto11
    commands: 
        - chmod +x ./liquibase/liquibase
  pre_build:
      commands:
        # Docker Image Tag with Date Time & Code Buiild Resolved Source Version
        - TAG="$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        - MANIFEST_FILE_NAME="liquibase-deployment.yml"
        # Update Image tag in our Kubernetes Deployment Manifest        
        - echo "Update Image tag in kube-manifest..."
        - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$TAG"'@' kube-manifests/$MANIFEST_FILE_NAME
        # Verify AWS CLI Version        
        - echo "Verify AWS CLI Version..."
        - aws --version
        # Login to ECR Registry for docker to push the image to ECR Repository
        - echo "Login in to Amazon ECR..."
        - $(aws ecr get-login --no-include-email)
  build:
    commands:
      # Generate the changelog xml file.
      - echo "Comparing databases DEV to Testing"
      - ./liquibase/liquibase --changelog-file=src/main/resources/db/changelog/changes/codebuild-$CODEBUILD_BUILD_NUMBER.xml
                  --url="jdbc:mysql://$LIQUIBASE_TESTING_URL:3306/demo?autoReconnect=true&useSSL=false"
                  --username=$LIQUIBASE_TESTING_USERNAME
                  --password=$LIQUIBASE_TESTING_PASSWORD
                  --referenceUrl="jdbc:mysql://$LIQUIBASE_DEV_URL:3306/demo?autoReconnect=true&useSSL=false"
                  --referenceUsername=$LIQUIBASE_DEV_USERNAME
                  --referencePassword=$LIQUIBASE_DEV_PASSWORD
                  --classpath=./liquibase/lib/mysql-connector-java-8.0.12.jar
                  diff-changelog
      # Build Docker Image
      - echo "Build started on `date`"
      - echo "Building the Docker image..."
      # Package demo via Maven Wrapper
      - ./mvnw clean package
      - docker build --tag $REPOSITORY_URI:$TAG .
  post_build:
    commands:
      # Push Docker Image to ECR Repository
      - echo "Build completed on `date`"
      - echo "Pushing the Docker image to ECR Repository"
      - docker push $REPOSITORY_URI:$TAG
      - echo "Docker Image Push to ECR Completed - $REPOSITORY_URI:$TAG"    
artifacts:
  files: 
    - build.json   
    - kube-manifests/*
    - src/main/resources/db/changelog/changes/*